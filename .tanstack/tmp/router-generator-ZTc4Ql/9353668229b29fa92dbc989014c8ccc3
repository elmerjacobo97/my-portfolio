/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProjectsIndexRouteImport } from './routes/projects/index'
import { Route as HomeIndexRouteImport } from './routes/home/index'
import { Route as ContactIndexRouteImport } from './routes/contact/index'
import { Route as AboutIndexRouteImport } from './routes/about/index'

const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactIndexRoute = ContactIndexRouteImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof AboutIndexRoute
  '/contact': typeof ContactIndexRoute
  '/home': typeof HomeIndexRoute
  '/projects': typeof ProjectsIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof AboutIndexRoute
  '/contact': typeof ContactIndexRoute
  '/home': typeof HomeIndexRoute
  '/projects': typeof ProjectsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/about/': typeof AboutIndexRoute
  '/contact/': typeof ContactIndexRoute
  '/home/': typeof HomeIndexRoute
  '/projects/': typeof ProjectsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/about' | '/contact' | '/home' | '/projects'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/contact' | '/home' | '/projects'
  id: '__root__' | '/about/' | '/contact/' | '/home/' | '/projects/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AboutIndexRoute: typeof AboutIndexRoute
  ContactIndexRoute: typeof ContactIndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact/': {
      id: '/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AboutIndexRoute: AboutIndexRoute,
  ContactIndexRoute: ContactIndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
